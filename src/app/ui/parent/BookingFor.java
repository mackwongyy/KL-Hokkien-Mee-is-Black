/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app.ui.parent;

import app.ui.educator.*;
import app.ui.*;
import javax.swing.JOptionPane;
import repositories.StudentRepository;
import services.StudentService;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import app.ui.parent.BookDestination;
/**
 *
 * @author x
 */
public class BookingFor extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    private final StudentService studentService;
    private static String selectedChild;

    public BookingFor() {
        initComponents();
        this.studentService = new StudentRepository();
        populateChildComboBox("TanChinPeng", childComboBox);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        parentHomeButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        childComboBox = new javax.swing.JComboBox<>();
        OKButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(480, 360));

        jPanel1.setMaximumSize(new java.awt.Dimension(4000, 3000));
        jPanel1.setMinimumSize(new java.awt.Dimension(4000, 3000));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(4000, 3000));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        parentHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/ui/parent/homeButton1.jpg"))); // NOI18N
        parentHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentHomeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(parentHomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 740, 50, 40));
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 740, 50, 40));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Booking Page");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 580, 90));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Booking for:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 280, 310, 90));

        childComboBox.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        childComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Child 1", "child 2" }));
        childComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(childComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, 300, 60));

        OKButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });
        jPanel1.add(OKButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 470, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/ui/booking1.jpg"))); // NOI18N
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -180, 1760, 1260));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 2257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 557, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2491, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void populateChildComboBox(String parentUsername, JComboBox<String> childComboBox) {
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;
        
        try {
            // Connect to the MySQL database
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ds_assignment?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "Wdhjbhgq@17@MySQL");
            // SQL query to retrieve children based on parentUsername
            String sql = "SELECT child_username FROM relationships WHERE parent_username = ?";
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, parentUsername);
            
            // Execute the query
            rs = stmt.executeQuery();
            
            // Clear existing items in the childComboBox
            childComboBox.removeAllItems();
            
            // Populate childComboBox with retrieved children
            List<String> children = new ArrayList<>();
            while (rs.next()) {
                String child = rs.getString("child_username");
                children.add(child);
            }
            for (String child : children) {
                childComboBox.addItem(child);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "An error occurred while retrieving children.", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close the resources
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    private void childComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childComboBoxActionPerformed
        // TODO add your handling code here:
        // Call the method to populate childComboBox with children of the selected parent
        
    }//GEN-LAST:event_childComboBoxActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        selectedChild = (String) childComboBox.getSelectedItem();
    
    if (selectedChild != null) {
        // Open the BookDestination frame and pass the selected child username
        BookDestination bookDestination = new BookDestination(selectedChild);
        bookDestination.setVisible(true);
        
        // Close the current frame (BookingFor)
        this.dispose();
    } else {
        JOptionPane.showMessageDialog(null, "Please select a child.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_OKButtonActionPerformed

    private void parentHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentHomeButtonActionPerformed
        // TODO add your handling code here:
        ParentHomeFrame parentHomeFrame = new ParentHomeFrame();
        // Make the BookingForm frame visible
        parentHomeFrame.setVisible(true);

        // Optionally, dispose of the current frame if you want to close it
        dispose();
    }//GEN-LAST:event_parentHomeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingFor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingFor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingFor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingFor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingFor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JLabel background;
    private javax.swing.JComboBox<String> childComboBox;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton parentHomeButton;
    // End of variables declaration//GEN-END:variables
}
