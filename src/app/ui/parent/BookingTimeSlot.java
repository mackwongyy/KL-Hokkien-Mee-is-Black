/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app.ui.parent;

import app.ui.educator.*;
import app.ui.*;
import javax.swing.JOptionPane;
import repositories.StudentRepository;
import services.StudentService;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import app.ui.parent.BookSuccessful;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/**
 *
 * @author x
 */
public class BookingTimeSlot extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    private final StudentService studentService;
    private static final String DB_URL = "jdbc:mysql://localhost:3306/ds_assignment?zeroDateTimeBehavior=CONVERT_TO_NULL";
    private static final String DB_USER = "root";
    private static final String DB_PASSWORD = "Wdhjbhgq@17@MySQL";
    private static String selectedChild;

    public BookingTimeSlot(String destinationName, String selectedChild) {
        initComponents();
        this.destinationLabel.setText(destinationName);
        this.studentService = new StudentRepository();
        this.selectedChild = selectedChild;
        displayTimeSlots();
    }
    
    private List<String> formattedDates = new ArrayList<>();

    private void displayTimeSlots() {
        // Get the current date
        LocalDate currentDate = LocalDate.now();

        // Create a DateTimeFormatter to format the dates
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        // Display time slots for one week (7 days) from the current date
        StringBuilder timeSlotsBuilder = new StringBuilder();
        timeSlotsBuilder.append("Available Time Slots:\n");
        for (int i = 0; i < 7; i++) {
            // Format the current date using the formatter
            String formattedDate = currentDate.plusDays(i).format(formatter);

            // Append the formatted date to the time slots
            timeSlotsBuilder.append("[").append(i + 1).append("] ").append(formattedDate);

            // Add a newline separator between dates
            timeSlotsBuilder.append("\n");

            // Add the formatted date to the list
            formattedDates.add(formattedDate);
        }

        // Set the text of the label to display the time slots
        StringBuilder timeSlotsHTML = new StringBuilder("<html>");
        for (int i = 0; i < formattedDates.size(); i++) {
            timeSlotsHTML.append("[").append(i + 1).append("] ").append(formattedDates.get(i)).append("<br>");
        }
        timeSlotsHTML.append("</html>");

        // Set the formatted text to the JLabel
        LTimeSlot.setText(timeSlotsHTML.toString());
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BookButton = new javax.swing.JButton();
        TimeSlotInput = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        LTimeSlot = new javax.swing.JLabel();
        destinationLabel = new javax.swing.JLabel();
        parentHomeButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(480, 360));

        jPanel1.setMaximumSize(new java.awt.Dimension(4000, 3000));
        jPanel1.setMinimumSize(new java.awt.Dimension(4000, 3000));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(4000, 3000));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Booking Time Slot");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 580, 90));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Enter a time slot:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 630, -1, -1));

        BookButton.setBackground(new java.awt.Color(204, 255, 255));
        BookButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        BookButton.setText("BOOK");
        BookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BookButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 710, -1, -1));

        TimeSlotInput.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jPanel1.add(TimeSlotInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 630, 400, 50));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255, 80));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255, 80));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LTimeSlot.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        LTimeSlot.setText("jLabel1");
        jPanel2.add(LTimeSlot, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 670, 340));

        destinationLabel.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        destinationLabel.setForeground(new java.awt.Color(0, 255, 255));
        destinationLabel.setText("1");
        jPanel2.add(destinationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 690, 50));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 720, 390));

        parentHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/ui/parent/homeButton1.jpg"))); // NOI18N
        parentHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentHomeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(parentHomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 740, 50, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/ui/booking1.jpg"))); // NOI18N
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -180, 1760, 1260));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 2257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 557, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2491, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookButtonActionPerformed
        String timeSlot = TimeSlotInput.getText();
    int selectedSlotIndex = Integer.parseInt(timeSlot) - 1; // Convert to zero-based index

    // Validate the input time slot (e.g., format, availability, etc.)
    if (isValidTimeSlot(selectedSlotIndex)) {
        // Get the selected destination name
        String destinationName = destinationLabel.getText();
        
        // Get the formatted date corresponding to the selected time slot
        String selectedDate = formattedDates.get(selectedSlotIndex);

        // Open the BookSuccessful frame and pass the destination name and time slot
        BookSuccessful bookSuccessful = new BookSuccessful(destinationName, selectedDate, selectedChild);
        bookSuccessful.setVisible(true);
        
        // Close the current frame
        this.dispose();
    } else {
        // Display an error message if the time slot is invalid
        JOptionPane.showMessageDialog(null, "Invalid time slot. Please enter a valid time slot.");
    }
    }//GEN-LAST:event_BookButtonActionPerformed

    private void parentHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentHomeButtonActionPerformed
        // TODO add your handling code here:
        ParentHomeFrame parentHomeFrame = new ParentHomeFrame();
        // Make the BookingForm frame visible
        parentHomeFrame.setVisible(true);

        // Optionally, dispose of the current frame if you want to close it
        dispose();
    }//GEN-LAST:event_parentHomeButtonActionPerformed
    

private boolean isValidTimeSlot(int selectedSlotIndex) {
    // Check if the selected index is within the range [0, 6]
    if (selectedSlotIndex < 0 || selectedSlotIndex >= formattedDates.size()) {
        return false;
    }

    // Get the formatted date corresponding to the selected time slot
    String selectedDate = formattedDates.get(selectedSlotIndex);

    // Establish the database connection
    try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
        // Check if the time slot clashes with any booking dates
        String checkTimeSlotQuery = "SELECT COUNT(*) FROM bookings WHERE booking_date = ?";
        try (PreparedStatement checkTimeSlotStatement = connection.prepareStatement(checkTimeSlotQuery)) {
            checkTimeSlotStatement.setString(1, selectedDate);
            try (ResultSet timeSlotResultSet = checkTimeSlotStatement.executeQuery()) {
                if (timeSlotResultSet.next() && timeSlotResultSet.getInt(1) > 0) {
                    // Display error message
                    JOptionPane.showMessageDialog(null, "Invalid time slot. Please choose a valid time slot.");
                    return false; // The time slot clashes with an existing booking date
                }
            }
        }
    } catch (SQLException e) {
        // Handle database connection errors
        e.printStackTrace();
        return false;
    }

    // If all checks pass, the time slot is valid
    return true;
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingTimeSlot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingTimeSlot("destinationName", "selectedChild").setVisible(true);
                // Replace "destinationName" with the actual destination name you want to pass
            }
    });
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookButton;
    private javax.swing.JLabel LTimeSlot;
    private javax.swing.JTextField TimeSlotInput;
    private javax.swing.JLabel background;
    private javax.swing.JLabel destinationLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton parentHomeButton;
    // End of variables declaration//GEN-END:variables
}
